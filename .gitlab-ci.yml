stages:
  - build
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
  BRANCH_TAG: $CI_COMMIT_REF_SLUG
  RELEASE_TAG: latest

.use-dind: &use-dind
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.except-release-bot: &except-release-bot
  except:
    variables:
      - $CI_COMMIT_TITLE =~ /^chore\(release\).*/

build:
  <<: *use-dind
  stage: build
  only:
    - master
    - merge_requests
  <<: *except-release-bot
  script:
    - TAG=$( [[ $CI_COMMIT_REF_NAME == master ]] && echo $RELEASE_TAG || echo $BRANCH_TAG )
    - IMAGE=$REGISTRY_IMAGE:$TAG
    - docker pull $IMAGE || true
    - docker build --target build --cache-from $IMAGE --build-arg NODE_IMG_VER --build-arg REACT_APP_TRACKING_ID --tag $IMAGE .
    - docker push $IMAGE

package:
  <<: *use-dind
  stage: build
  only:
    - master
  <<: *except-release-bot
  artifacts:
    expire_in: 5 mins
    paths:
      - dist/
  variables:
    DIST_PATH: /builds/$CI_PROJECT_PATH/dist
  script:
    - docker pull $REGISTRY_IMAGE:$RELEASE_TAG
    - mkdir -p $DIST_PATH
    - docker run --rm -u root -v $DIST_PATH:/mnt/dist $REGISTRY_IMAGE:$RELEASE_TAG sh -c "mv * /mnt/dist/"

release:
  stage: release
  only:
    - master
  <<: *except-release-bot
  image: node:$NODE_IMG_VER
  cache:
    key: yarn-cache
    paths:
      - .yarn-cache/
  artifacts:
    expire_in: 5 mins
    paths:
      - version
  script:
    - apk add --no-cache git
    - yarn --frozen-lockfile --cache-folder .yarn-cache
    - yarn semantic-release
    - yarn --silent current-version > version

deploy:
  <<: *use-dind
  stage: deploy
  only:
    - master
  <<: *except-release-bot
  script:
    - VERSION=$( cat version )
    - docker pull $REGISTRY_IMAGE:$RELEASE_TAG
    - docker tag $REGISTRY_IMAGE:$RELEASE_TAG $REGISTRY_IMAGE:$VERSION
    - docker push $REGISTRY_IMAGE:$VERSION
